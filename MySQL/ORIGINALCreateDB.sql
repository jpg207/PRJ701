DROP DATABASE IF EXISTS CompCreator;
CREATE DATABASE CompCreator;

USE CompCreator;

DROP TABLE IF EXISTS CPU;
DROP TABLE IF EXISTS GPU;
DROP TABLE IF EXISTS SystemCase;
DROP TABLE IF EXISTS PSU;
DROP TABLE IF EXISTS StorageDrive;
DROP TABLE IF EXISTS Memory;
DROP TABLE IF EXISTS MotherBoard;
DROP TABLE IF EXISTS Component;

CREATE TABLE Component(
	CompID INT(10) AUTO_INCREMENT PRIMARY KEY NOT NULL,
	CompName VARCHAR(50) NOT NULL,
    CompPrice DECIMAL(6,2) NOT NULL,
    CompLink VARCHAR(50) NOT NULL
);

CREATE TABLE CPU(
	CPUID INT(10) AUTO_INCREMENT PRIMARY KEY NOT NULL,
    CPUClock DECIMAL (10,2) NOT NULL,
    CPUCores INT (2) NOT NULL,
    CPUThreads INT (2) NOT NULL,
    CPUIGPU BOOL NOT NULL,
    CPURating DECIMAL (10, 2) NOT NULL,
    CompID INT (10) NOT NULL,
    FOREIGN KEY (CompID) REFERENCES Component(CompID)
);

CREATE TABLE GPU(
	GPUID INT(10) AUTO_INCREMENT PRIMARY KEY NOT NULL,
		GPUUnifiedShaders VARCHAR(200),
		GPUDVI VARCHAR(200),
		GPUHDR VARCHAR(200),
		GPUFactoryOverclocked VARCHAR(200),
		GPUOpenGL VARCHAR(200),
		GPUMemoryAcceleration VARCHAR(200),
		GPUTypeOfDisplayPortConnector VARCHAR(200),
		GPUCooling VARCHAR(200),
		GPUNumberOfFans VARCHAR(200),
		GPUPCIExpressChannels VARCHAR(200),
		GPUMemoryType VARCHAR(200),
		GPUGraphicsProcessor VARCHAR(200),
		GPUDisplayPortVersion VARCHAR(200),
		GPUUnifiedShadingArchitecture VARCHAR(200),
		GPUCAD/CAMGraphicsCard VARCHAR(200),
		GPUSupplementaryPowerConnector VARCHAR(200),
		GPULink VARCHAR(200),
		GPUDualLink VARCHAR(200),
		GPUManufacturerWarranty VARCHAR(200),
		GPUNumberOfDVIOutputs VARCHAR(200),
		GPUVulkan VARCHAR(200),
		GPUNumberOfSlots VARCHAR(200),
		GPUProductPage VARCHAR(200),
		GPUMemoryBandwidth VARCHAR(200),
		GPUOperatingSystem VARCHAR(200),
		GPUHDMI VARCHAR(200),
		GPUMemoryCapacity VARCHAR(200),
		GPUOtherConnectors VARCHAR(200),
		GPUTypeOfHDMIConnector VARCHAR(200),
		GPULength VARCHAR(200),
		GPUPCIExpressVersion VARCHAR(200),
		GPUReleaseYear VARCHAR(200),
		GPUProcessorSpeed VARCHAR(200),
		GPUDirectX VARCHAR(200),
		GPUVGAOutputs VARCHAR(200),
		GPUMemorySpeed VARCHAR(200),
		GPULowProfile VARCHAR(200),
		GPUNon-referenceCooler VARCHAR(200),
		GPUSingleLink VARCHAR(200),
		GPUNumberOfHDMIOutputs VARCHAR(200),
		GPUSemi-passive VARCHAR(200),
		GPUMemoryInterface VARCHAR(200),
		GPUNumberOfDisplayPortOutputs VARCHAR(200),
		GPUNumberOfSupportedMonitors VARCHAR(200),
		GPUMaximumResolution VARCHAR(200),
		GPUSupportForMultipleGraphicsCards VARCHAR(200),
		GPUHDMIVersion VARCHAR(200),
		GPUFeatures VARCHAR(200),
		GPUDisplayPort VARCHAR(200),
		GPUBoost VARCHAR(200),
    GPURating DECIMAL (10,2) NOT NULL,
    CompID INT (10) NOT NULL,
    FOREIGN KEY (CompID) REFERENCES Component(CompID)
);

CREATE TABLE SystemCase(
	CaseID INT(10) AUTO_INCREMENT PRIMARY KEY NOT NULL,
    CaseSize VARCHAR(50) NOT NULL,
    MaxMoboSize VARCHAR(10) NOT NULL,
    CompID INT (10) NOT NULL,
    FOREIGN KEY (CompID) REFERENCES Component(CompID)
);

CREATE TABLE PSU(
	PSUID INT(10) AUTO_INCREMENT PRIMARY KEY NOT NULL,
    PSU80Rating INT(10) NOT NULL,
    PSUModular TINYINT(1) NOT NULL,
    PSUWattage INT(10) NOT NULL,
    CompID INT (10) NOT NULL,
    FOREIGN KEY (CompID) REFERENCES Component(CompID)
);

CREATE TABLE StorageDrive(
	SDID INT(10) AUTO_INCREMENT PRIMARY KEY NOT NULL,
    SDType VARCHAR(10) NOT NULL,
    SDCapacity INT(10) NOT NULL,
    SDSpeed INT(5) NOT NULL,
    CompID INT (10) NOT NULL,
    FOREIGN KEY (CompID) REFERENCES Component(CompID)
);

CREATE TABLE Memory(
	MemID INT(10) AUTO_INCREMENT PRIMARY KEY NOT NULL,
    MemCapacity INT(10) NOT NULL,
    MemType VARCHAR(10) NOT NULL,
    MemSpeed INT(10) NOT NULL,
    CompID INT (10) NOT NULL,
    FOREIGN KEY (CompID) REFERENCES Component(CompID)
);

CREATE TABLE MotherBoard(
	MoboID INT(10) AUTO_INCREMENT PRIMARY KEY NOT NULL,
    MoboSocketType INT(10) NOT NULL,
    MoboRamSticks Int(10) NOT NULL,
    CompID INT (10) NOT NULL,
    FOREIGN KEY (CompID) REFERENCES Component(CompID)
);
